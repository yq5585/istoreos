From a98200ac0edc4169670213dca827a8842ec7cff5 Mon Sep 17 00:00:00 2001
From: Liangbin Lian <jjm2473@gmail.com>
Date: Wed, 6 Dec 2023 17:37:55 +0800
Subject: [PATCH] rfkill-rk patches

---
 net/Makefile             |  2 +-
 net/rfkill/Kconfig       |  9 +++++++++
 net/rfkill/Makefile      |  2 ++
 net/rfkill/rfkill-bt.c   | 16 ++++++++++++----
 net/rfkill/rfkill-wlan.c | 22 +++++++++++++++++-----
 5 files changed, 41 insertions(+), 10 deletions(-)

--- a/net/Makefile
+++ b/net/Makefile
@@ -52,7 +52,7 @@ obj-$(CONFIG_TIPC)		+= tipc/
 obj-$(CONFIG_NETLABEL)		+= netlabel/
 obj-$(CONFIG_IUCV)		+= iucv/
 obj-$(CONFIG_SMC)		+= smc/
-obj-$(CONFIG_RFKILL_FULL)	+= rfkill/
+obj-$(CONFIG_RFKILL)	+= rfkill/
 obj-$(CONFIG_NET_9P)		+= 9p/
 obj-$(CONFIG_CAIF)		+= caif/
 ifneq ($(CONFIG_DCB),)
--- a/net/rfkill/Kconfig
+++ b/net/rfkill/Kconfig
@@ -36,3 +36,12 @@ config RFKILL_GPIO
 	help
 	  If you say yes here you get support of a generic gpio RFKILL
 	  driver.
+
+config RFKILL_RK
+	tristate "Rockchip RFKILL driver"
+	depends on RFKILL
+	depends on MMC
+	depends on ARCH_ROCKCHIP
+	default n
+	help
+	  Rockchip rfkill driver for rk29/rk3X
--- a/net/rfkill/Makefile
+++ b/net/rfkill/Makefile
@@ -7,3 +7,5 @@ rfkill-y			+= core.o
 rfkill-$(CONFIG_RFKILL_INPUT)	+= input.o
 obj-$(CONFIG_RFKILL_FULL)	+= rfkill.o
 obj-$(CONFIG_RFKILL_GPIO)	+= rfkill-gpio.o
+rfkill-rk-y			+= rfkill-wlan.o rfkill-bt.o
+obj-$(CONFIG_RFKILL_RK)		+= rfkill-rk.o
--- a/net/rfkill/rfkill-bt.c
+++ b/net/rfkill/rfkill-bt.c
@@ -24,7 +24,9 @@
 #include <linux/delay.h>
 #include <linux/rfkill-bt.h>
 #include <linux/rfkill-wlan.h>
+#ifdef CONFIG_PM_SLEEP
 #include <linux/wakelock.h>
+#endif
 #include <linux/interrupt.h>
 #include <asm/irq.h>
 #include <linux/suspend.h>
@@ -66,7 +68,9 @@ struct rfkill_rk_data {
 	struct rfkill_rk_platform_data *pdata;
 	struct platform_device *pdev;
 	struct rfkill *rfkill_dev;
+#ifdef CONFIG_PM_SLEEP
 	struct wake_lock bt_irq_wl;
+#endif
 	struct delayed_work bt_sleep_delay_work;
 	int irq_req;
 };
@@ -120,10 +124,10 @@ static irqreturn_t rfkill_rk_wake_host_i
 	LOG("BT_WAKE_HOST IRQ fired\n");
 
 	DBG("BT IRQ wakeup, request %dms wakelock\n", BT_IRQ_WAKELOCK_TIMEOUT);
-
+#ifdef CONFIG_PM_SLEEP
 	wake_lock_timeout(&rfkill->bt_irq_wl,
 			  msecs_to_jiffies(BT_IRQ_WAKELOCK_TIMEOUT));
-
+#endif
 	return IRQ_HANDLED;
 }
 
@@ -788,10 +792,10 @@ static int rfkill_rk_probe(struct platfo
 				   "rts");
 	if (ret)
 		goto fail_gpio;
-
+#ifdef CONFIG_PM_SLEEP
 	wake_lock_init(&rfkill->bt_irq_wl, WAKE_LOCK_SUSPEND,
 		       "rfkill_rk_irq_wl");
-
+#endif
 	ret = rfkill_rk_setup_wake_irq(rfkill, 0);
 	if (ret)
 		goto fail_setup_wake_irq;
@@ -836,7 +840,9 @@ fail_alloc:
 	remove_proc_entry("btwrite", sleep_dir);
 	remove_proc_entry("lpm", sleep_dir);
 fail_setup_wake_irq:
+#ifdef CONFIG_PM_SLEEP
 	wake_lock_destroy(&rfkill->bt_irq_wl);
+#endif
 fail_gpio:
 
 	g_rfkill = NULL;
@@ -876,7 +882,9 @@ static int rfkill_rk_remove(struct platf
 	if (gpio_is_valid(rfkill->pdata->poweron_gpio.io))
 		gpio_free(rfkill->pdata->poweron_gpio.io);
 	clk_disable_unprepare(rfkill->pdata->ext_clk);
+#ifdef CONFIG_PM_SLEEP
 	wake_lock_destroy(&rfkill->bt_irq_wl);
+#endif
 	g_rfkill = NULL;
 
 	return 0;
--- a/net/rfkill/rfkill-wlan.c
+++ b/net/rfkill/rfkill-wlan.c
@@ -24,7 +24,9 @@
 #include <linux/delay.h>
 #include <linux/rfkill-wlan.h>
 #include <linux/rfkill-bt.h>
+#ifdef CONFIG_PM_SLEEP
 #include <linux/wakelock.h>
+#endif
 #include <linux/interrupt.h>
 #include <asm/irq.h>
 #include <linux/suspend.h>
@@ -34,7 +36,6 @@
 #include <dt-bindings/gpio/gpio.h>
 #include <linux/skbuff.h>
 #include <linux/fb.h>
-#include <linux/rockchip/grf.h>
 #include <linux/regmap.h>
 #include <linux/mfd/syscon.h>
 #include <linux/mmc/host.h>
@@ -43,7 +44,9 @@
 #include <linux/of_device.h>
 #include <linux/of_gpio.h>
 #endif
+#ifdef CONFIG_ROCKCHIP_VENDOR_STORAGE
 #include <linux/soc/rockchip/rk_vendor_storage.h>
+#endif
 #include <linux/device.h>
 
 #include "../../drivers/mmc/core/pwrseq.h"
@@ -58,7 +61,9 @@
 
 struct rfkill_wlan_data {
 	struct rksdmmc_gpio_wifi_moudle *pdata;
+#ifdef CONFIG_PM_SLEEP
 	struct wake_lock wlan_irq_wl;
+#endif
 };
 
 static struct rfkill_wlan_data *g_rfkill = NULL;
@@ -412,6 +417,7 @@ EXPORT_SYMBOL(rockchip_wifi_reset);
 #include <linux/errno.h>
 u8 wifi_custom_mac_addr[6] = { 0, 0, 0, 0, 0, 0 };
 
+#ifdef CONFIG_ROCKCHIP_VENDOR_STORAGE
 //#define RANDOM_ADDRESS_SAVE
 static int get_wifi_addr_vendor(unsigned char *addr)
 {
@@ -452,6 +458,12 @@ static int get_wifi_addr_vendor(unsigned
 	}
 	return 0;
 }
+#else
+static int get_wifi_addr_vendor(unsigned char *addr)
+{
+	return -1;
+}
+#endif
 
 int rockchip_wifi_mac_addr(unsigned char *buf)
 {
@@ -863,10 +875,10 @@ static int rfkill_wlan_probe(struct plat
 		if (ret)
 			goto fail_alloc;
 	}
-
+#ifdef CONFIG_PM_SLEEP
 	wake_lock_init(&rfkill->wlan_irq_wl, WAKE_LOCK_SUSPEND,
 		       "rfkill_wlan_wake");
-
+#endif
 	rfkill_set_wifi_bt_power(1);
 
 #ifdef CONFIG_SDIO_KEEPALIVE
@@ -907,9 +919,9 @@ static int rfkill_wlan_remove(struct pla
 	struct rfkill_wlan_data *rfkill = platform_get_drvdata(pdev);
 
 	LOG("Enter %s\n", __func__);
-
+#ifdef CONFIG_PM_SLEEP
 	wake_lock_destroy(&rfkill->wlan_irq_wl);
-
+#endif
 	fb_unregister_client(&rfkill_wlan_fb_notifier);
 
 	if (gpio_is_valid(rfkill->pdata->power_n.io))
